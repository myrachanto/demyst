definitions:
  support.Base:
    properties:
      created_At:
        type: string
      delete_At:
        type: string
      updated_At:
        type: string
    type: object
  support.HttpError:
    properties:
      code:
        type: integer
      errors:
        type: string
      message:
        type: string
      results:
        type: boolean
    type: object
  users.User:
    properties:
      _id:
        type: string
      address:
        type: string
      base:
        $ref: '#/definitions/support.Base'
      birthday:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      phone:
        type: string
      picture:
        type: string
      user_agent:
        type: string
      usercode:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/logout:
    post:
      consumes:
      - application/json
      description: logout user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: logout a user
      tags:
      - users
  /api/users:
    delete:
      consumes:
      - application/json
      description: Create a new user item
      parameters:
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get item
      parameters:
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Get a user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user item
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Create a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user item
      parameters:
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Update a user
      tags:
      - users
  /api/users/reset:
    post:
      consumes:
      - application/json
      description: Reset user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Reset a user
      tags:
      - users
  /front/forgot:
    post:
      consumes:
      - application/json
      description: Forgot user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Forgot a user
      tags:
      - users
  /front/login:
    post:
      consumes:
      - application/json
      description: Login user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/support.HttpError'
      summary: Login a user
      tags:
      - users
  /health:
    get:
      consumes:
      - '*/*'
      description: get the Health status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the Health status of server.
      tags:
      - Health Status
swagger: "2.0"
